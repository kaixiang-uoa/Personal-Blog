name: Simplified CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  # Frontend Code Quality
  frontend-quality:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: Front-end/package-lock.json

      - name: Install Frontend dependencies
        run: npm ci
        working-directory: ./Front-end

      - name: Check Frontend code formatting
        run: npm run format:check
        working-directory: ./Front-end

      - name: Run Frontend ESLint
        run: npm run lint
        working-directory: ./Front-end

      - name: Run Frontend TypeScript check
        run: npx tsc --noEmit
        working-directory: ./Front-end

      - name: Run Frontend tests
        run: npm test
        working-directory: ./Front-end

      - name: Build Frontend application
        run: npm run build
        working-directory: ./Front-end

  # Deploy to Vercel (Frontend)
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: [frontend-quality]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci
        working-directory: ./Front-end

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./Front-end
          vercel-args: "--prod"
